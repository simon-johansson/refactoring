{
  "changeFunctionDeclaration": {
    "index": 5,
    "title": "Change Function Declaration",
    "imgName": "changeFunctionDeclaration.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/changeFunctionDeclaration.html",
    "before": "function circum(radius) {...}\n",
    "after": "function circumference(radius) {...}\n"
  },
  "replaceTempWithQuery": {
    "index": 15,
    "title": "Replace Temp with Query",
    "imgName": "replaceTempWithQuery.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/replaceTempWithQuery.html",
    "before": "const basePrice = this._quantity * this._itemPrice;\nif (basePrice > 1000)\n  return basePrice * 0.95;\nelse\n  return basePrice * 0.98;\n",
    "after": "get basePrice() {this._quantity * this._itemPrice;}\n\n...\n\nif (this.basePrice > 1000)\n  return this.basePrice * 0.95;\nelse\n  return this.basePrice * 0.98;\n"
  },
  "removeSubclass": {
    "index": 61,
    "title": "Remove Subclass",
    "imgName": "removeSubclass.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/removeSubclass.html",
    "before": "class Person {\n  get genderCode() {return \"X\";}\n}\nclass Male extends Person {\n  get genderCode() {return \"M\";}\n}\nclass Female extends Person {\n  get genderCode() {return \"F\";}\n}\n",
    "after": "class Person {\n  get genderCode() {return this._genderCode;}\n}\n"
  },
  "collapseHierarchy": {
    "index": 63,
    "title": "Collapse Hierarchy",
    "imgName": "collapseHierarchy.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/collapseHierarchy.html",
    "before": "class Employee {...}\nclass Salesman extends Employee {...}\n",
    "after": "class Employee {...}\n"
  },
  "changeValueToReference": {
    "index": 34,
    "title": "Change Value to Reference",
    "imgName": "changeValueToReference.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/changeValueToReference.html",
    "before": "let customer = new Customer(customerData);\n",
    "after": "let customer = customerRepository.get(customerData.id);\n"
  },
  "replaceLoopWithPipeline": {
    "index": 28,
    "title": "Replace Loop with Pipeline",
    "imgName": "replaceLoopWithPipeline.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/replaceLoopWithPipeline.html",
    "before": "  const names = [];\n  for (const i of input) {\n    if (i.job === \"programmer\")\n      names.push(i.name);\n  }\n",
    "after": "  const names = input\n    .filter(i => i.job === \"programmer\")\n    .map(i => i.name)\n  ;\n\n"
  },
  "replaceTypeCodeWithSubclasses": {
    "index": 60,
    "title": "Replace Type Code with Subclasses",
    "imgName": "replaceTypeCodeWithSubclasses.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/replaceTypeCodeWithSubclasses.html",
    "before": "function createEmployee(name, type) {\n  return new Employee(name, type);\n}\n",
    "after": "function createEmployee(name, type) {\n  switch (type) {\n    case \"engineer\": return new Engineer(name);\n    case \"salesman\": return new Salesman(name);\n    case \"manager\":  return new Manager (name);\n  }\n"
  },
  "inlineClass": {
    "index": 17,
    "title": "Inline Class",
    "imgName": "inlineClass.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/inlineClass.html",
    "before": "class Person {\n  get officeAreaCode() {return this._telephoneNumber.areaCode;}\n  get officeNumber()   {return this._telephoneNumber.number;}\n}\nclass TelephoneNumber {\n  get areaCode() {return this._areaCode;}\n  get number()   {return this._number;}\n}\n",
    "after": "class Person {\n  get officeAreaCode() {return this._officeAreaCode;}\n  get officeNumber()   {return this._officeNumber;}\n"
  },
  "replaceFunctionWithCommand": {
    "index": 50,
    "title": "Replace Function with Command",
    "imgName": "replaceFunctionWithCommand.png",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/replaceFunctionWithCommand.html",
    "before": "  function score(candidate, medicalExam, scoringGuide) {\n    let result = 0;\n    let healthLevel = 0;\n    // long body code\n  }\n",
    "after": "class Scorer {\n  constructor(candidate, medicalExam, scoringGuide) {\n    this._candidate = candidate;\n    this._medicalExam = medicalExam;\n    this._scoringGuide = scoringGuide;\n  }\n\n  execute() {\n    this._result = 0;\n    this._healthLevel = 0;\n    // long body code\n  }\n}\n"
  },
  "introduceSpecialCase": {
    "index": 40,
    "title": "Introduce Special Case",
    "imgName": "introduceSpecialCase.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/introduceSpecialCase.html",
    "before": "if (aCustomer === \"unknown\") customerName = \"occupant\";\n",
    "after": "class UnknownCustomer {\n    get name() {return \"occupant\";}\n"
  },
  "moveField": {
    "index": 22,
    "title": "Move Field",
    "imgName": "moveField.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/moveField.html",
    "before": "class Customer {\n  get plan() {return this._plan;}\n  get discountRate() {return this._discountRate;}\n",
    "after": "class Customer {\n  get plan() {return this._plan;}\n  get discountRate() {return this.plan.discountRate;}\n"
  },
  "changeReferenceToValue": {
    "index": 33,
    "title": "Change Reference to Value",
    "imgName": "changeReferenceToValue.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/changeReferenceToValue.html",
    "before": "class Product {\n  applyDiscount(arg) {this._price.amount -= arg;}\n",
    "after": "class Product {\n  applyDiscount(arg) {\n    this._price = new Money(this._price.amount - arg, this._price.currency);\n  }\n"
  },
  "pushDownField": {
    "index": 59,
    "title": "Push Down Field",
    "imgName": "pushDownField.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/pushDownField.html",
    "before": "class Employee {        // Java\n  private String quota;\n}\n\nclass Engineer extends Employee {...}\nclass Salesman extends Employee {...}\n\n",
    "after": "class Employee {...}\nclass Engineer extends Employee {...}\n\nclass Salesman extends Employee {\n  protected String quota;\n}\n"
  },
  "removeSettingMethod": {
    "index": 48,
    "title": "Remove Setting Method",
    "imgName": "removeSettingMethod.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/removeSettingMethod.html",
    "before": "class Person {\n  get name() {...}\n  set name(aString) {...}\n",
    "after": "class Person {\n  get name() {...}\n"
  },
  "replaceExceptionWithPrecheck": {
    "index": 54,
    "title": "Replace Exception with Precheck",
    "imgName": "replaceExceptionWithPrecheck.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/replaceExceptionWithPrecheck.html",
    "before": "double getValueForPeriod (int periodNumber) {\n  try {\n    return values[periodNumber];\n  } catch (ArrayIndexOutOfBoundsException e) {\n    return 0;\n  }\n}\n",
    "after": "double getValueForPeriod (int periodNumber) {\n  return (periodNumber >= values.length) ? 0 : values[periodNumber];\n}\n"
  },
  "replaceErrorCodeWithException": {
    "index": 53,
    "title": "Replace Error Code with Exception",
    "imgName": "replaceErrorCodeWithException.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/replaceErrorCodeWithException.html",
    "before": "if (data)\n  return new ShippingRules(data);\nelse\n  return -23;\n",
    "after": "if (data)\n  return new ShippingRules(data);\nelse\n  throw new OrderProcessingError(-23);\n"
  },
  "splitPhase": {
    "index": 11,
    "title": "Split Phase",
    "imgName": "splitPhase.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/splitPhase.html",
    "before": "const orderData = orderString.split(/\\s+/);\nconst productPrice = priceList[orderData[0].split(\"-\")[1]];\nconst orderPrice = parseInt(orderData[1]) * productPrice;\n",
    "after": "const orderRecord = parseOrder(order);\nconst orderPrice = price(orderRecord, priceList);\n\nfunction parseOrder(aString) {\n  const values =  aString.split(/\\s+/);\n  return ({\n    productID: values[0].split(\"-\")[1],\n    quantity: parseInt(values[1]),\n  });\n}\nfunction price(order, priceList) {\n  return order.quantity * priceList[order.productID];\n}\n"
  },
  "replaceDerivedVariableWithQuery": {
    "index": 32,
    "title": "Replace Derived Variable with Query",
    "imgName": "replaceDerivedVariableWithQuery.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/replaceDerivedVariableWithQuery.html",
    "before": "  get discountedTotal() {return this._discountedTotal;}\n  set discount(aNumber) {\n    const old = this._discount;\n    this._discount = aNumber;\n    this._discountedTotal += old - aNumber; \n  }\n",
    "after": "  get discountedTotal() {return this._baseTotal - this._discount;}\n  set discount(aNumber) {this._discount = aNumber;}\n"
  },
  "replaceConditionalWithPolymorphism": {
    "index": 39,
    "title": "Replace Conditional with Polymorphism",
    "imgName": "replaceConditionalWithPolymorphism.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/replaceConditionalWithPolymorphism.html",
    "before": "switch (bird.type) {\n  case 'EuropeanSwallow':\n    return \"average\";\n  case 'AfricanSwallow':\n    return (bird.numberOfCoconuts > 2) ? \"tired\" : \"average\";\n  case 'NorwegianBlueParrot':\n    return (bird.voltage > 100) ? \"scorched\" : \"beautiful\";\n  default:\n    return \"unknown\";\n",
    "after": "class EuropeanSwallow {\n  get plumage() {\n    return \"average\";\n  }\nclass AfricanSwallow {\n  get plumage() {\n     return (this.numberOfCoconuts > 2) ? \"tired\" : \"average\";\n  }\nclass NorwegianBlueParrot {\n  get plumage() {\n     return (this.voltage > 100) ? \"scorched\" : \"beautiful\";\n  }\n"
  },
  "renameField": {
    "index": 31,
    "title": "Rename Field",
    "imgName": "renameField.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/renameField.html",
    "before": "class Organization {\n  get name() {...}\n}\n",
    "after": "class Organization {\n  get title() {...}\n}\n"
  },
  "preserveWholeObject": {
    "index": 45,
    "title": "Preserve Whole Object",
    "imgName": "preserveWholeObject.png",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/preserveWholeObject.html",
    "before": "  const low = aRoom.daysTempRange.low;\n  const high = aRoom.daysTempRange.high;\n  if (aPlan.withinRange(low, high))\n",
    "after": "  if (aPlan.withinRange(aRoom.daysTempRange))\n"
  },
  "replaceCommandWithFunction": {
    "index": 51,
    "title": "Replace Command with Function",
    "imgName": "replaceCommandWithFunction.png",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/replaceCommandWithFunction.html",
    "before": "class ChargeCalculator {\n  constructor (customer, usage){\n    this._customer = customer;\n    this._usage = usage;\n  }\n  execute() {\n    return this._customer.rate * this._usage;\n  }\n}\n",
    "after": "function charge(customer, usage) {\n  return customer.rate * usage;\n}\n"
  },
  "moveStatementsToCallers": {
    "index": 24,
    "title": "Move Statements to Callers",
    "imgName": "moveStatementsToCallers.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/moveStatementsToCallers.html",
    "before": "emitPhotoData(outStream, person.photo);\n\nfunction emitPhotoData(outStream, photo) {\n  outStream.write(`<p>title: ${photo.title}</p>\\n`);\n  outStream.write(`<p>location: ${photo.location}</p>\\n`);\n}\n",
    "after": "emitPhotoData(outStream, person.photo);\noutStream.write(`<p>location: ${person.photo.location}</p>\\n`);\n\nfunction emitPhotoData(outStream, photo) {\n  outStream.write(`<p>title: ${photo.title}</p>\\n`);\n}\n"
  },
  "combineFunctionsIntoClass": {
    "index": 9,
    "title": "Combine Functions into Class",
    "imgName": "combineFunctionsIntoClass.png",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/combineFunctionsIntoClass.html",
    "before": "function base(aReading) {...}\nfunction taxableCharge(aReading) {...}\nfunction calculateBaseCharge(aReading) {...}\n",
    "after": "class Reading {\n  base() {...}\n  taxableCharge() {...}\n  calculateBaseCharge() {...}\n}\n"
  },
  "removeFlagArgument": {
    "index": 66,
    "title": "Remove Flag Argument",
    "imgName": "removeFlagArgument.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/removeFlagArgument.html",
    "before": "function setDimension(name, value) {\n  if (name === \"height\") {\n    this._height = value;\n    return;\n  }\n  if (name === \"width\") {\n    this._width = value;\n    return;\n  }\n}\n",
    "after": "function setHeight(value) {this._height = value;}\nfunction setWidth (value) {this._width = value;}\n"
  },
  "introduceParameterObject": {
    "index": 8,
    "title": "Introduce Parameter Object",
    "imgName": "introduceParameterObject.png",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/introduceParameterObject.html",
    "before": "function amountInvoiced(startDate, endDate) {...}\nfunction amountReceived(startDate, endDate) {...}\nfunction amountOverdue(startDate, endDate) {...}\n",
    "after": "function amountInvoiced(aDateRange) {...}\nfunction amountReceived(aDateRange) {...}\nfunction amountOverdue(aDateRange) {...}\n"
  },
  "removeMiddleMan": {
    "index": 19,
    "title": "Remove Middle Man",
    "imgName": "removeMiddleMan.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/removeMiddleMan.html",
    "before": "manager = aPerson.manager;\n\nclass Person {\n  get manager() {return this.department.manager;}\n",
    "after": "manager = aPerson.department.manager;\n"
  },
  "encapsulateVariable": {
    "index": 6,
    "title": "Encapsulate Variable",
    "imgName": "encapsulateVariable.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/encapsulateVariable.html",
    "before": "let defaultOwner = {firstName: \"Martin\", lastName: \"Fowler\"};\n",
    "after": "let defaultOwnerData = {firstName: \"Martin\", lastName: \"Fowler\"};\nexport function defaultOwner()       {return defaultOwnerData;}\nexport function setDefaultOwner(arg) {defaultOwnerData = arg;}\n"
  },
  "separateQueryFromModifier": {
    "index": 43,
    "title": "Separate Query from Modifier",
    "imgName": "separateQueryFromModifier.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/separateQueryFromModifier.html",
    "before": "function getTotalOutstandingAndSendBill() {\n  const result = customer.invoices.reduce((total, each) => each.amount + total, 0);\n  sendBill();\n  return result;\n}\n",
    "after": "function totalOutstanding() {\n  return customer.invoices.reduce((total, each) => each.amount + total, 0);  \n}\nfunction sendBill() {\n  emailGateway.send(formatBill(customer));\n}\n"
  },
  "replaceQueryWithParameter": {
    "index": 47,
    "title": "Replace Query with Parameter",
    "imgName": "replaceQueryWithParameter.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/replaceQueryWithParameter.html",
    "before": "targetTemperature(aPlan)\n\nfunction targetTemperature(aPlan) {\n  currentTemperature = thermostat.currentTemperature;\n  // rest of function...\n",
    "after": "targetTemperature(aPlan, thermostat.currentTemperature)\n\nfunction targetTemperature(aPlan, currentTemperature) {\n  // rest of function...\n"
  },
  "replaceInlineCodeWithFunctionCall": {
    "index": 25,
    "title": "Replace Inline Code with Function Call",
    "imgName": "replaceInlineCodeWithFunctionCall.png",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/replaceInlineCodeWithFunctionCall.html",
    "before": "  let appliesToMass = false;\n  for(const s of states) {\n    if (s === \"MA\") appliesToMass = true;\n  }\n",
    "after": "appliesToMass = states.includes(\"MA\");\n"
  },
  "hideDelegate": {
    "index": 18,
    "title": "Hide Delegate",
    "imgName": "hideDelegate.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/hideDelegate.html",
    "before": "manager = aPerson.department.manager;\n",
    "after": "manager = aPerson.manager;\n\nclass Person {\n  get manager() {return this.department.manager;}\n"
  },
  "inlineFunction": {
    "index": 2,
    "title": "Inline Function",
    "imgName": "inlineFunction.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/inlineFunction.html",
    "before": "function getRating(driver) {\n  return moreThanFiveLateDeliveries(driver) ? 2 : 1;\n}\n\nfunction moreThanFiveLateDeliveries(driver) {\n  return driver.numberOfLateDeliveries > 5;\n}\n",
    "after": "function getRating(driver) {\n  return (driver.numberOfLateDeliveries > 5) ? 2 : 1;\n}\n"
  },
  "consolidateConditionalExpression": {
    "index": 37,
    "title": "Consolidate Conditional Expression",
    "imgName": "consolidateConditionalExpression.png",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/consolidateConditionalExpression.html",
    "before": "  if (anEmployee.seniority < 2) return 0;\n  if (anEmployee.monthsDisabled > 12) return 0;\n  if (anEmployee.isPartTime) return 0;\n",
    "after": "  if (isNotEligableForDisability()) return 0;\n\n  function isNotEligableForDisability() {\n    return ((anEmployee.seniority < 2)\n            || (anEmployee.monthsDisabled > 12)\n            || (anEmployee.isPartTime));\n  }\n"
  },
  "encapsulateRecord": {
    "index": 12,
    "title": "Encapsulate Record",
    "imgName": "encapsulateRecord.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/encapsulateRecord.html",
    "before": "organization = {name: \"Acme Gooseberries\", country: \"GB\"};\n",
    "after": "class Organization {\n  constructor(data) {\n    this._name = data.name;\n    this._country = data.country;\n  }\n  get name()    {return this._name;}\n  set name(arg) {this._name = arg;}\n  get country()    {return this._country;}\n  set country(arg) {this._country = arg;}\n}\n"
  },
  "replaceMagicLiteral": {
    "index": 35,
    "title": "Replace Magic Literal",
    "imgName": "replaceMagicLiteral.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/replaceMagicLiteral.html",
    "before": "function potentialEnergy(mass, height) {\n  return mass * 9.81 * height;\n}\n",
    "after": "const STANDARD_GRAVITY = 9.81;\nfunction potentialEnergy(mass, height) {\n  return mass * STANDARD_GRAVITY * height;\n}\n"
  },
  "pushDownMethod": {
    "index": 58,
    "title": "Push Down Method",
    "imgName": "pushDownMethod.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/pushDownMethod.html",
    "before": "class Employee {\n  get quota {...}\n}\n\nclass Engineer extends Employee {...}\nclass Salesman extends Employee {...}\n",
    "after": "class Employee {...}\nclass Engineer extends Employee {...}\nclass Salesman extends Employee {\n  get quota {...}  \n}\n"
  },
  "decomposeConditional": {
    "index": 36,
    "title": "Decompose Conditional",
    "imgName": "decomposeConditional.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/decomposeConditional.html",
    "before": "if (!aDate.isBefore(plan.summerStart) && !aDate.isAfter(plan.summerEnd))\n  charge = quantity * plan.summerRate;\nelse\n  charge = quantity * plan.regularRate + plan.regularServiceCharge;\n",
    "after": "if (summer())\n  charge = summerCharge();\nelse\n  charge = regularCharge();\n"
  },
  "replaceSuperclassWithDelegate": {
    "index": 65,
    "title": "Replace Superclass with Delegate",
    "imgName": "replaceSuperclassWithDelegate.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/replaceSuperclassWithDelegate.html",
    "before": "class List {...}\nclass Stack extends List {...}\n",
    "after": "class Stack {\n  constructor() {\n    this._storage = new List();\n  }\n}\nclass List {...}\n"
  },
  "replaceSubclassWithDelegate": {
    "index": 64,
    "title": "Replace Subclass with Delegate",
    "imgName": "replaceSubclassWithDelegate.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/replaceSubclassWithDelegate.html",
    "before": "class Order {\n  get daysToShip() {\n    return this._warehouse.daysToShip;\n  }\n}\n\nclass PriorityOrder extends Order {\n  get daysToShip() {\n    return this._priorityPlan.daysToShip;\n  }\n}\n",
    "after": "class Order {\n  get daysToShip() {\n    return (this._priorityDelegate)\n      ? this._priorityDelegate.daysToShip\n      : this._warehouse.daysToShip;\n  }\n}\n\nclass PriorityOrderDelegate {\n  get daysToShip() {\n    return this._priorityPlan.daysToShip\n  }\n}\n"
  },
  "replaceConstructorWithFactoryFunction": {
    "index": 49,
    "title": "Replace Constructor with Factory Function",
    "imgName": "replaceConstructorWithFactoryFunction.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/replaceConstructorWithFactoryFunction.html",
    "before": "leadEngineer = new Employee(document.leadEngineer, 'E');\n",
    "after": "leadEngineer = createEngineer(document.leadEngineer);\n"
  },
  "extractFunction": {
    "index": 1,
    "title": "Extract Function",
    "imgName": "extractFunction.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/extractFunction.html",
    "before": "function printOwing(invoice) {\n  printBanner();\n  let outstanding  = calculateOutstanding();\n\n  //print details\n  console.log(`name: ${invoice.customer}`);\n  console.log(`amount: ${outstanding}`);  \n}\n",
    "after": "function printOwing(invoice) {\n  printBanner();\n  let outstanding  = calculateOutstanding();\n  printDetails(outstanding);\n\n  function printDetails(outstanding) {\n    console.log(`name: ${invoice.customer}`);\n    console.log(`amount: ${outstanding}`);\n  }\n}\n"
  },
  "encapsulateCollection": {
    "index": 13,
    "title": "Encapsulate Collection",
    "imgName": "encapsulateCollection.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/encapsulateCollection.html",
    "before": "class Person {              \n  get courses() {return this._courses;}\n  set courses(aList) {this._courses = aList;}\n\n",
    "after": "class Person {\n  get courses() {return this._courses.slice();}\n  addCourse(aCourse)    { ... }\n  removeCourse(aCourse) { ... }\n"
  },
  "pullUpField": {
    "index": 56,
    "title": "Pull Up Field",
    "imgName": "pullUpField.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/pullUpField.html",
    "before": "class Employee {...} // Java\n\nclass Salesman extends Employee {\n  private String name;\n}\n\nclass Engineer extends Employee {\n  private String name;\n}\n",
    "after": "class Employee {\n  protected String name;\n}\n\nclass Salesman extends Employee {...}\nclass Engineer extends Employee {...}\n\n"
  },
  "combineFunctionsIntoTransform": {
    "index": 10,
    "title": "Combine Functions into Transform",
    "imgName": "combineFunctionsIntoTransform.png",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/combineFunctionsIntoTransform.html",
    "before": "function base(aReading) {...}\nfunction taxableCharge(aReading) {...}\n",
    "after": "function enrichReading(argReading) {\n  const aReading = _.cloneDeep(argReading);\n  aReading.baseCharge = base(aReading);\n  aReading.taxableCharge = taxableCharge(aReading);\n  return aReading;\n}\n\n"
  },
  "renameVariable": {
    "index": 7,
    "title": "Rename Variable",
    "imgName": "renameVariable.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/renameVariable.html",
    "before": "let a = height * width;\n",
    "after": "let area = height * width;\n"
  },
  "replaceNestedConditionalWithGuardClauses": {
    "index": 38,
    "title": "Replace Nested Conditional with Guard Clauses",
    "imgName": "replaceNestedConditionalWithGuardClauses.png",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/replaceNestedConditionalWithGuardClauses.html",
    "before": "function getPayAmount() {\n  let result;\n  if (isDead)\n    result = deadAmount();\n  else {\n    if (isSeparated)\n      result = separatedAmount();\n    else {\n      if (isRetired)\n        result = retiredAmount();\n      else\n        result = normalPayAmount();\n    }\n  }\n  return result;\n}\n",
    "after": "function getPayAmount() {\n  if (isDead) return deadAmount();\n  if (isSeparated) return separatedAmount();\n  if (isRetired) return retiredAmount();\n  return normalPayAmount();\n}\n"
  },
  "parameterizeFunction": {
    "index": 44,
    "title": "Parameterize Function",
    "imgName": "parameterizeFunction.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/parameterizeFunction.html",
    "before": "function tenPercentRaise(aPerson) {\n  aPerson.salary = aPerson.salary.multiply(1.1);\n}\nfunction fivePercentRaise(aPerson) {\n  aPerson.salary = aPerson.salary.multiply(1.05);\n}\n",
    "after": "function raise(aPerson, factor) {\n  aPerson.salary = aPerson.salary.multiply(1 + factor);\n}\n"
  },
  "moveStatementsIntoFunction": {
    "index": 23,
    "title": "Move Statements into Function",
    "imgName": "moveStatementsIntoFunction.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/moveStatementsIntoFunction.html",
    "before": "result.push(`<p>title: ${person.photo.title}</p>`);\nresult.concat(photoData(person.photo));\n\nfunction photoData(aPhoto) {\n  return [\n    `<p>location: ${aPhoto.location}</p>`,\n    `<p>date: ${aPhoto.date.toDateString()}</p>`,\n  ];\n}\n",
    "after": "result.concat(photoData(person.photo));\n\nfunction photoData(aPhoto) {\n  return [\n    `<p>title: ${aPhoto.title}</p>`,\n    `<p>location: ${aPhoto.location}</p>`,\n    `<p>date: ${aPhoto.date.toDateString()}</p>`,\n  ];\n}\n"
  },
  "extractSuperclass": {
    "index": 62,
    "title": "Extract Superclass",
    "imgName": "extractSuperclass.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/extractSuperclass.html",
    "before": "class Department {\n  get totalAnnualCost() {...}\n  get name() {...}\n  get headCount() {...}\n}\n\nclass Employee {\n  get annualCost() {...}\n  get name() {...}\n  get id() {...}\n}\n",
    "after": "class Party {\n  get name() {...}\n  get annualCost() {...}\n}\n\nclass Department extends Party {\n  get annualCost() {...}\n  get headCount() {...}\n}\n\nclass Employee extends Party {\n  get annualCost() {...}\n  get id() {...}\n}\n"
  },
  "pullUpMethod": {
    "index": 55,
    "title": "Pull Up Method",
    "imgName": "pullUpMethod.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/pullUpMethod.html",
    "before": "class Employee {...}\n\nclass Salesman extends Employee {\n  get name() {...}\n}\n\nclass Engineer extends Employee {\n  get name() {...}\n}\n",
    "after": "class Employee {\n  get name() {...}\n}\n\nclass Salesman extends Employee {...}\nclass Engineer extends Employee {...}\n\n"
  },
  "slideStatements": {
    "index": 26,
    "title": "Slide Statements",
    "imgName": "slideStatements.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/slideStatements.html",
    "before": "const pricingPlan = retrievePricingPlan();\nconst order = retreiveOrder();\nlet charge;\nconst chargePerUnit = pricingPlan.unit;\n",
    "after": "const pricingPlan = retrievePricingPlan();\nconst chargePerUnit = pricingPlan.unit;\nconst order = retreiveOrder();\nlet charge;\n"
  },
  "extractClass": {
    "index": 16,
    "title": "Extract Class",
    "imgName": "extractClass.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/extractClass.html",
    "before": "class Person {\n  get officeAreaCode() {return this._officeAreaCode;}\n  get officeNumber()   {return this._officeNumber;}\n",
    "after": "class Person {\n  get officeAreaCode() {return this._telephoneNumber.areaCode;}\n  get officeNumber()   {return this._telephoneNumber.number;}\n}\nclass TelephoneNumber {\n  get areaCode() {return this._areaCode;}\n  get number()   {return this._number;}\n}\n"
  },
  "moveFunction": {
    "index": 21,
    "title": "Move Function",
    "imgName": "moveFunction.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/moveFunction.html",
    "before": "class Account {\n  get overdraftCharge() {...}\n",
    "after": "class AccountType {\n    get overdraftCharge() {...}\n"
  },
  "replacePrimitiveWithObject": {
    "index": 14,
    "title": "Replace Primitive with Object",
    "imgName": "replacePrimitiveWithObject.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/replacePrimitiveWithObject.html",
    "before": "orders.filter(o => \"high\" === o.priority\n                || \"rush\" === o.priority);\n",
    "after": "orders.filter(o => o.priority.higherThan(new Priority(\"normal\")))\n"
  },
  "inlineVariable": {
    "index": 4,
    "title": "Inline Variable",
    "imgName": "inlineVariable.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/inlineVariable.html",
    "before": "let basePrice = anOrder.basePrice;\nreturn (basePrice > 1000);\n",
    "after": "return anOrder.basePrice > 1000;\n"
  },
  "replaceParameterWithQuery": {
    "index": 46,
    "title": "Replace Parameter with Query",
    "imgName": "replaceParameterWithQuery.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/replaceParameterWithQuery.html",
    "before": "availableVacation(anEmployee, anEmployee.grade);\n\nfunction availableVacation(anEmployee, grade) {\n  // calculate vacation...\n",
    "after": "availableVacation(anEmployee)\n\nfunction availableVacation(anEmployee) {\n  const grade = anEmployee.grade;\n  // calculate vacation...\n"
  },
  "splitVariable": {
    "index": 30,
    "title": "Split Variable",
    "imgName": "splitVariable.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/splitVariable.html",
    "before": "let temp = 2 * (height + width);\nconsole.log(temp);\ntemp = height * width;\nconsole.log(temp);\n",
    "after": "const perimeter = 2 * (height + width);\nconsole.log(perimeter);\nconst area = height * width;\nconsole.log(area);\n"
  },
  "pullUpConstructorBody": {
    "index": 57,
    "title": "Pull Up Constructor Body",
    "imgName": "pullUpConstructorBody.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/pullUpConstructorBody.html",
    "before": "class Party {...}\n\nclass Employee extends Party {\n  constructor(name, id, monthlyCost) {\n    super();\n    this._id = id;\n    this._name = name;\n    this._monthlyCost = monthlyCost;\n  }\n}\n",
    "after": "class Party {\n  constructor(name){\n    this._name = name;\n  }\n}\n\nclass Employee extends Party {\n  constructor(name, id, monthlyCost) {\n    super(name);\n    this._id = id;\n    this._monthlyCost = monthlyCost;\n  }\n}\n"
  },
  "returnModifiedValue": {
    "index": 52,
    "title": "Return Modified Value",
    "imgName": "returnModifiedValue.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/returnModifiedValue.html",
    "before": "let totalAscent = 0;\ncalculateAscent();\n\nfunction calculateAscent() {\n  for (let i = 1; i < points.length; i++) {\n    const verticalChange = points[i].elevation - points[i-1].elevation;\n    totalAscent += (verticalChange > 0) ? verticalChange : 0;\n  }\n}\n",
    "after": "const totalAscent = calculateAscent();\n\nfunction calculateAscent() {\n  let result = 0;\n  for (let i = 1; i < points.length; i++) {\n    const verticalChange = points[i].elevation - points[i-1].elevation;\n    result += (verticalChange > 0) ? verticalChange : 0;\n  }\n  return result;\n}\n"
  },
  "removeDeadCode": {
    "index": 29,
    "title": "Remove Dead Code",
    "imgName": "removeDeadCode.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/removeDeadCode.html",
    "before": "if(false) {\n  doSomethingThatUsedToMatter();\n}\n",
    "after": ""
  },
  "splitLoop": {
    "index": 27,
    "title": "Split Loop",
    "imgName": "splitLoop.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/splitLoop.html",
    "before": "  let averageAge = 0;\n  let totalSalary = 0;\n  for (const p of people) {\n    averageAge += p.age;\n    totalSalary += p.salary;\n  }\n  averageAge = averageAge / people.length;\n",
    "after": "  let totalSalary = 0;\n  for (const p of people) {\n    totalSalary += p.salary;\n  }\n\n  let averageAge = 0;\n  for (const p of people) {\n    averageAge += p.age;\n  }\n  averageAge = averageAge / people.length;\n"
  },
  "substituteAlgorithm": {
    "index": 20,
    "title": "Substitute Algorithm",
    "imgName": "substituteAlgorithm.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/substituteAlgorithm.html",
    "before": "function foundPerson(people) {\n  for(let i = 0; i < people.length; i++) {\n    if (people[i] === \"Don\") {\n      return \"Don\";\n    }\n    if (people[i] === \"John\") {\n      return \"John\";\n    }\n    if (people[i] === \"Kent\") {\n      return \"Kent\";\n    }\n  }\n  return \"\";\n}\n\n",
    "after": "function foundPerson(people) {\n  const candidates = [\"Don\", \"John\", \"Kent\"];\n  return people.find(p => candidates.includes(p)) || '';\n}\n"
  },
  "introduceAssertion": {
    "index": 41,
    "title": "Introduce Assertion",
    "imgName": "introduceAssertion.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/introduceAssertion.html",
    "before": "if (this.discountRate)\n  base = base - (this.discountRate * base);\n",
    "after": "assert(this.discountRate >= 0);\nif (this.discountRate)\n  base = base - (this.discountRate * base);\n"
  },
  "extractVariable": {
    "index": 3,
    "title": "Extract Variable",
    "imgName": "extractVariable.svg",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/extractVariable.html",
    "before": "    return order.quantity * order.itemPrice -\n      Math.max(0, order.quantity - 500) * order.itemPrice * 0.05 +\n      Math.min(order.quantity * order.itemPrice * 0.1, 100);\n",
    "after": "    const basePrice = order.quantity * order.itemPrice;\n    const quantityDiscount = Math.max(0, order.quantity - 500) * order.itemPrice * 0.05;\n    const shipping = Math.min(basePrice * 0.1, 100);\n    return basePrice - quantityDiscount + shipping;\n"
  },
  "replaceControlFlagWithBreak": {
    "index": 42,
    "title": "Replace Control Flag with Break",
    "imgName": "replaceControlFlagWithBreak.png",
    "linkUrl": "https://memberservices.informit.com/my_account/webedition/9780135425664/html/replaceControlFlagWithBreak.html",
    "before": "for (const p of people) {\n  if (! found) {\n    if ( p === \"Don\") {\n      sendAlert();\n      found = true;\n    }\n",
    "after": "for (const p of people) {\n  if ( p === \"Don\") {\n    sendAlert();\n    break;\n  }\n"
  }
}
